on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  createrelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@master
        with:
          name: release_url
          path: release_url.txt

  build_and_upload:
    needs: [createrelease]
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: 
          - image: ubuntu-latest
            goos: linux
            goarch: amd64
          - image: macos-latest
            goos: darwin
            goarch: amd64
          - image: windows-latest
            goos: windows
            goarch: amd64
    runs-on: ${{ matrix.platform.image }}
    steps:
    - name: Install Go
      uses: actions/setup-go@master
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@master
    - name: Build
      run: |
        .github/scripts/build.sh ${{ matrix.platform.goos }} ${{ matrix.platform.goarch }}
      shell: bash
    - name: Find artifact name
      id: find_artifact_name
      run: |
        value=`find . -name tgmsg-*-* | cut -d '/' -f2`
        echo ::set-output name=artifact_name::$value
      shell: bash
    - name: Load Release URL File from release job
      uses: actions/download-artifact@master
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
      shell: bash
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }} 
        asset_path: ${{ steps.find_artifact_name.outputs.artifact_name }} 
        asset_name: ${{ steps.find_artifact_name.outputs.artifact_name }} 
        asset_content_type: application/octet-stream
